var yelpArray = [];

function sendMarkerToYelp(map){
	// delete all yelp markers already on map before displaying new ones
	if(yelpArray.length != 0){
 		for (var i = 0; i < yelpArray.length; i++) {
    	yelpArray[i].setMap(null);
  		}
	}
	// contained in yelp.js.erb
	searchYelp(map,markerPosition);
}

// gets information from business object returned from yelp api and creates an info window 
// which is associated to each yelpMarker on click.
function makeYelpInfoWindow(business, yelpMarker, infoWindow){
  var number_exists = true;
	var businessName = business.name;
  var streetName = business.location.address[0];
  var cityName = business.location.city;
  var stateName = business.location.state_code;
  var zipCode = business.location.postal_code;
  var phoneNumber = business.phone;
  if(phoneNumber != undefined){
  	var formattedNumber = phoneNumber.slice(0,3)+'-'+phoneNumber.slice(3,6)+'-'+phoneNumber.slice(6,10);
  }
  else{
    number_exists = false;
  }
  var ratingImage = business.rating_img_url;
  var rating = business.rating; 
  
  // get the business' yelp reviews
  var reviews = getYelpReviews(business.id);

  var infowindowcontent = '<h4 id="business_name"><strong>'+businessName+'</strong></h4><br>';
 	infowindowcontent += '<p id="streetName">'+streetName+'</p>';
  infowindowcontent += '<p id="cityLine">' + cityName+', '+stateName+' '+zipCode+'</p>';
  infowindowcontent += '<p id="businessURL"><a href="'+business.url+'" target="_blank">Click here for more info</a></p><br>';
  if(number_exists){
    infowindowcontent += '<p id="phoneNumber">'+formattedNumber+'</p>';
  }
  infowindowcontent += '<img id="businessImage" src="'+business.image_url+'"><br>';
  infowindowcontent += '<div>'+'<p id="rating">'+rating+'<img id="ratingImage"src="'+ratingImage+'">'+'</p>'+'</div>';
  infowindowcontent += '<div>'+'<p id="reviewHeader">Reviews</p>'+'<div>';

  // display info window on yelp marker click
  var yelpInfoWindow = new google.maps.InfoWindow();
  google.maps.event.addListener(yelpMarker, 'click', function() {
  yelpInfoWindow.setContent(infowindowcontent);
  yelpInfoWindow.open(map,yelpMarker);

  // remove marker info window
  // We may want to move this to when one of the buttons is clicked in the infoWindow
  // once we add more functionality to it. But just closing it here for now
  infoWindow.close();
  });
}

// using yelp api we get food businesses near marker lat/lng. Sends post request
// to welcome#search which does the actual api call and we get back the callback object (data)
function searchYelp(map, markerLatLng){
	var searchTerm = "food";
	var coordinates = {latitude: markerLatLng.k, longitude: markerLatLng.D};
	// post to the search with the search term, take the response data
	// and process it
	var bounds = new google.maps.LatLngBounds();
	var LatLngList = [];
	$.post('/search', { term: searchTerm, coordinates: coordinates }, function(data) {
		// iterate through each business in the response capture the data
		data['businesses'].forEach(function(business, index) {
		// make array of LatLng objects of each yelp business
		LatLngList.push(new google.maps.LatLng(business.location.coordinate.latitude, business.location.coordinate.longitude)); 
		// extend bounds of map to include each yelp business' lat/lng
		bounds.extend(LatLngList[index]);
		createYelpMarker(map, business);
		});
	// fit bounds of map to bounds object
	map.fitBounds(bounds);
	map.setZoom(map.getZoom()-1);
	});
}

// create yelp markers on map using lat/lng
function createYelpMarker(map, business){
  var coords = {lat: business.location.coordinate.latitude, lng: business.location.coordinate.longitude};
  var image = {url: '<%= asset_path 'yelp-marker.png' %>',
               size: new google.maps.Size(32, 32)};
  var yelpMarker = new google.maps.Marker({
          position: coords,
          animation: google.maps.Animation.DROP,
          map: map,
          icon: image
  });

  yelpArray.push(yelpMarker);
  makeYelpInfoWindow(business, yelpMarker, infoWindow);
}

function getYelpReviews(businessID){
  $.post('/business', { id: businessID }, function(review) {
    var userName = review.reviews[0].user.name;
    var rating = review.reviews[0].rating;
    var excerpt = review.reviews[0].excerpt;
    var userImage = review.reviews[0].user.image_url;
    var ratingImage = review.reviews[0].rating_image_url;
  });
}