<!DOCTYPE html>
  <head>
    <title>Simple Map</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script> 
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
      html, body {
        height: 100%;
        margin: 0px;
        padding: 0px
      }
      body{
        overflow: hidden;  /*no scrollbar nonsense*/ 
      }

    #map-canvas{
    height:100%;
    width:100%;
    }

    #panel{
      position: absolute;
      left: 2%;
      top:2%;
      z-index: 1;
    }

    #address{
    float:left; 
    width:300px; 
    height:27px; 
    line-height:27px;
    text-indent:10px; 
    font-family:Helvetica, sans-serif; 
    font-size:1em; 
    color:#333; 
    background: #fff; 
    border:solid 1px #d9d9d9; 
    border-top:solid 1px #c0c0c0; 
    border-right:none;
    } 

    #address:hover{
    border:solid 1px #3079ED; 
    border-top:solid 1px #3079ED; 
    border-right:none;
    } 

    #search{
    cursor:pointer; 
    width:70px; 
    height: 31px; 
    line-height:0; 
    font-size:0; 
    text-indent:-999px;
    color: transparent;  
    background: url(<%= asset_path 'search.png' %>) no-repeat #4d90fe center; 
    border: 1px solid #3079ED; 
    -moz-border-radius: 2px; 
    -webkit-border-radius: 2px; 
    background-size: 15px 15px;
    }
    #search:hover {
    border: 1px solid #2F5BB7;
	}

	#yelpButton{
	min-width: 22px;
	min-height: 22px;
	background: url(<%= asset_path 'yelp.png' %>) no-repeat #4d90fe center; 
	/*background-size: 30px 30px;*/
	border: 0px;
	text-align: middle;
	}

    #image-container {    
    text-align: justify;
    -ms-text-justify: distribute-all-lines;
    text-justify: distribute-all-lines;
    white-space: nowrap;

    background-color:#333333;
    height:25%;
    width:100%;
    box-shadow: 0px -3px 6px rgba(0,0,0,0.4);
    bottom:-100px; 
    position:absolute;
    display:none;
}

    .box {
    width: 20%;
    height: 100%;
    vertical-align: top;
    display: inline-block;
    *display: inline;
    zoom: 1;
}

    .stretch {
    width: 100%;
    display: inline-block;
    font-size: 0;
    line-height: 0;
}      
    </style>
    <script src="https://maps.googleapis.com/maps/api/js?libraries=places&sensor=false"></script>
    <%= javascript_include_tag "application" %>
    <script>
      var map;
      var noStreetViewInfoWindow; // InfoWindow message telling us the marker has no Street View
      var infoWindow;
      var markerArray = [];
      var panArray = [];
      var geocoder;
      var divCount = 0;
      var menuContent = '<p id="yelp_text">Top 5 restaurants near me: ' + '<button id="yelpButton">' + '</button>' + '</p>';

      function createInfoWindow(text, map, marker){
      	infoWindow = new google.maps.InfoWindow({
      		content: text
      	})
      	infoWindow.open(map,marker);
      }

      // creates new marker given lat/long of wherever you click, then pans to that new marker. 
      function createMarker(coords, map) {
        var marker = new google.maps.Marker({
          position: coords,
          animation: google.maps.Animation.DROP,
          map: map
        });
        markerArray.push(marker);
        map.panTo(marker.position);
        //var info = createInfoWindow(marker.title);

        // ******* Left Click Marker **********************************************
        // for each marker if you click it, you get the panorama street view image, which appears
        // in the "pano" div at the bottom of the page in the image container. 
        google.maps.event.addDomListener(marker,'click', function(event){   
          var panoramaOptions = {
  			   position: coords,
  			   pov: {
    			   heading: 0,
    			   pitch: 0
  					   },
           scrollwheel: false,
           linksControl: false,
           panControl: false,
           addressControlOptions: {
              position: google.maps.ControlPosition.TOP_RIGHT
              }
			     };
           
             // check if there is an info window for no street view
            // if(noStreetViewInfoWindow != null) {
            //   // if there is, close it
            //   noStreetViewInfoWindow.close();
            // }
            if(infoWindow != null){
              infoWindow.close();
            }
           // tests to see if street view panorama exists before displaying image in image-container. Also checks to see if pano image
           // is already displayed. 
           var svTest = new google.maps.StreetViewService();
           svTest.getPanoramaByLocation(coords, 50, function(data,status){
            // data.location is position of the pano image of the marker clicked
            if(status == "OK" && notInContainer(data.location)){
              // jquery to have image-container scroll from bottom on marker click
               if( $("#image-container").css('display', 'none')){
                    $('#image-container').animate({ 'bottom' : '0px' });     
                    $("#image-container").toggle();
                    var divID = "pano" + divCount;
                    // pano containers are added to image-container here
                    $( "#image-container" ).prepend( "<div class='box' id="+divID+"></div>" );
                    if( $("#image-container").children().length > 6){
                        $("#image-container").css('overflow-x', 'scroll');
                    }
              } //end of .css if statement
             
              
                    // here we actually get the street pano and display it in the pano container with id=divID
                    var panorama = new google.maps.StreetViewPanorama(document.getElementById(divID), panoramaOptions); 
                    panArray.push(panorama);
                    divCount++;

                    //hovering over pano image in image-container animates its associated marker on the map
                    $(document.getElementById(divID)).hover(function(){ 
                    if (marker.getAnimation() != null) {
                    marker.setAnimation(null);
                    } 
                    else {
                    marker.setAnimation(google.maps.Animation.BOUNCE);
                    map.panTo(marker.position);
                    }
                    }); //end of hover

            
            } //end of status == "OK" if statement
            // opens info window on marker if no street view is available
            // taking out to include left click menu. If no street view avaiable, it just won't display for now. 
            // else if(status != "OK"){
            //   var contentString = "No Street View Available";
            //   // infowindow.open(map,marker);
            //   noStreetViewInfoWindow = new google.maps.InfoWindow({
            //   content: contentString
            //   });
            //   noStreetViewInfoWindow.open(map,marker);
            // }  //end of else if
           }); // end of getPanoramaByLocation
        // right now info window is created on any marker click
        createInfoWindow(menuContent, map, marker);
        }); // end of on marker click


        // ******* Right Click Marker **********************************************
        var contextMenu = new ContextMenu();
        
        // Add right-click event to the marker
        google.maps.event.addDomListener(marker, 'rightclick', function(event) {
          // opens the delete menu sending it this marker
          // the marker is kept in the array though

          contextMenu.open(map, marker);
        }); // end of rightclick marker

      }  // end of createMarker function

      // returns true if pano with location: coords is not in the image-container. Returns false if it is already there.
      function notInContainer(coords){
        for (i = 0; i < panArray.length; i++) {
            if(JSON.stringify(panArray[i].position) == JSON.stringify(coords.latLng)){
              return false;
            }
        }
        return true;
      }

      function notInMarkerArray(coords){
        for (i = 0; i < markerArray.length; i++) {
            if(JSON.stringify(markerArray[i].position) == JSON.stringify(coords.latLng)){
              return false;
            }
        }
        return true;
      }

      function codeAddress() {
      var address = document.getElementById('address').value;
      geocoder.geocode( { 'address': address}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        var geocodeLatLng = {k: results[0].geometry.location.k,
                             D: results[0].geometry.location.D};
        var geocodeObject = {latLng: geocodeLatLng };              
        if(notInMarkerArray(geocodeObject)){
          map.setCenter(results[0].geometry.location);
          createMarker(results[0].geometry.location, map);
        }
      } 
      else {
      alert('Geocode was not successful for the following reason: ' + status);
          }
        }); // end of geocode()
      } // end of function

      // sets up the map object using mapOptions properties, creates 'home base' marker, and adds listener to the map object
      // so that on click you create a new marker.
      function initialize() {
        detectBrowser();
        geocoder = new google.maps.Geocoder();
        var mapOptions = {
          zoom: 10,
          center: new google.maps.LatLng(37.736414, -122.247953),
          disableDefaultUI: true,
          zoomControl: true,
          zoomControlOptions: {style: google.maps.ZoomControlStyle.DEFAULT,position: google.maps.ControlPosition.RIGHT_CENTER}
        };
        map = new google.maps.Map(document.getElementById('map-canvas'),
            mapOptions);
        createMarker({lat: 37.736414, lng: -122.247953}, map);

        addMarkerListener = google.maps.event.addDomListener(map, 'click', function(event){
          if(canCreateMarker) {
            createMarker(event.latLng, map);
          } else {
            // BIG ASSUMPTION
            // if we can't create a marker, this acting of clicking should mean we now can
            // this workaround is needed because all other checks, such as if there is a delete-menu
            // or when closing the menu, happen before this click event
            canCreateMarker = true;
          }
        });

        // Remove default right-click menu for our entire window
        // will be replaced by our own
        google.maps.event.addDomListener(window, "contextmenu", function(e) {
          e.preventDefault();
        });
        $("#address").focus();

        var input = document.getElementById('address');
        var autocomplete = new google.maps.places.Autocomplete(input);
  		autocomplete.bindTo('bounds', map);
      }


      google.maps.event.addDomListener(window, 'load', initialize);

    </script>
  </head>

  <body>
    <div id="panel">
      <input id="address" type="textbox" placeholder="Enter a location">
      <input id="search" type="button" value="Geocode" onclick="codeAddress()">
    </div>
    
    <div id="map-canvas"></div>
    <div id="image-container">
    <span class="stretch"></span>
    </div>
    

    <!-- <div class="menu"><ul><li>Button1</li><li>Button2</li><li>Button3</li></ul></div> -->
  </body>
</html>






